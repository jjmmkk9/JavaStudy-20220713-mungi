20220713
변수명 
	영문자나 숫자를 사용할 수 있고 시작은 영문or특수문자("$","_")로 시작
	자바에서 이미 사용중인 예약어 사용 X
	통의 크기와 모양에 맞는 것만 넣을 수 있는데(변수에 담는 값) ==> 자료형 선언
	int level;  -> int 통에 level 이름 붙임 (!선언)
	level = 10; -> 값 대입(초기화) 
	
	
메모리
	메모리는 2진수로 관리된다. 2,8,10,16진수
	2진수 <10이 되는 순간 = 2>
		0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111 
	10진수 <10이 되는 순간 = 10>
		0~9(10개)		
	16진수 <10이 되는 순간 = 16>

1 비트 (2^1
	↓ 1자리가 1bit
	0 0 0 0 -> 1 1 1 1 = 4bit = 2^4
	
1 바이트(8비트) (2^8  
	00000000 -> 11111111 8bit => 1byte
	
20220714	
리터럴 상수

형변환
	문자-> 정수 -> 실수
	값이 작은 범위에서 큰범위로 형 변환
	
	실수 -> 정수 는 역방향이므로 (다운캐스팅)
	double c = b;
	int d = c;  -> 여기서 빨간줄 뜬다. 해결방법: Add cast to (int)

연산자
	대입연산자: 말그대로 변수에 값을 대입하는 연산자 = 
	부호연산자: +, - 를 표현하기 위해 사용
	산술연산자: +, -, *, /, %
		 	9.0 / 2 = 4.5 나옴 -> 자동으로 실수로 업캐스팅
			(int) 9.0 / 2 = 4 둘다 정수여서 내가 원하는 4로 값 받을 수 있다.
	증감연산자: ++, --    <Operation1>
	관계연산자: >, <, >=, <=, ==, !=
	논리연산자:
	 		AND 연산 (&&) - 곱
	 			true && true => true  (1*1=1)
	 			true && false => false (1*0=0)
  			OR 연산 (||) - 합
  				true || true => true (1+1=2)
  				true || false => true(1+0=1)
  				false || false => false(0+0=0)
  			NOT 연산 (!) - 부정
  			!true => false
  			!false => true
  			!(true && false) => true
  	조건연산자:
  			? :    <Operation4>
  	
문자열
	subString() : 글자 자르기  <String1>
	index : 글자 자릿수 구하기    <String1>
	
	
	lastIndex : 뒤에서부터 검사해서 동일한 글자가 있을 때   
		앞쪽 글자 먼저 잡히는 index와 동일한 글자의 자리를 뒤쪽에서 찾고싶을때 
	replace(char, char) : 문자를 찾아서 다른 문자로 바꿔라
	replaceAll(Str, Str) : 문자열을 찾아서 다른 문자열로 바꿔라
				여러개를 바꾸고 싶다면  .찍고 replace 반복
				
				String rePhone = phoneNumbers.replaceAll("010", "011")
				.replaceAll("/", "-")
				.replaceAll(", ", "/");
				System.out.println(rePhone2);
		<input4> 에서 문제 풀어봄!!! 이름이랑 전화번호 입력받아서 출력형식 잡기
				
20220715 
git 공부하기 ~!~!~!~! 드림코딩 엘리 복습해라 복습해라 복습해라 복습해라 

표준입력 Scanner Class
	Scanner메소드() 
	scanner.next() 는 줄바꿈과 스페이스를 포함하지 않는다.
	scanner.nextLine()은 줄바꿈과 스페이스 포함 (조 문기) 입력가능
	*버퍼개념 + nextLine )
			키보드 입력은 누르면 바로 나온다. 한글은 ㄱ + ㅏ 인데 ㄱ 누르자마자 출력되는 꼴
			문자열도 마찬가지로 문자를 여러개를 써야하는데 버퍼 쓰지 않으면 출력이 
			한 키마다 따로 출력된다.

			그래서 nextLine 앞에서 엔터 없애줄라고 nextLine 해줌~~
			
20220719


j04_문자열
	StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append("이름: ");
		stringBuilder.append("김준일");
		System.out.println(stringBuilder.toString(());
			==> 이름: 김준일
		
		<Stringbuilder2, 3(복습)>
		String names = "김준일님, 서재효님, 임나영님, 문창배님, 전나경님";
		names.indexOf("님") 문자열에서 첫번재 님 밖에 못찾음
		index = names.indexOf("님", index + 1) 계속 찾음
		
	
제어 흐름 - 조건문, 반복문
	흐름도: 생산성 up 프로그램 전체 흐름을 쉽게 파악할 수 있으며, 코드 작성 실수를 줄일수 있다. 
	C:\mungi\web\data\flowchart\If 흐름도 작성해본 것
	
	if (와 3항 연산자)	
		우리 컴퓨터에서 cpu는 연산을 하는 애라서 연산자를 좋아한대 if보다
		그래서 둘다 같은 동작을 한다면 되도록 3항연산자 사용
		
	switch case
		해당 케이스 위치를 찾아가서 거기서부터 실행해라
		그래서 case 사이에 break를 걸어주면 그 케이스까지만 실행됨.
	break 
		제어문 탈출 그러나 if문 탈출은 안됨.
		
	for
	
	while
		while(조건문){
		실행문
		후증가
	
	continue
		if ~~~ continue; continue 만나면 밑에거 실행하지 말고 다시 다음 반복으로 가라
	

20220720 

random 메소드


Random 클래스
		random메소드는 
			double rNum = Math.random();
			System.out.println((int) (rNum * 10)); 이렇게 사용해야 1~10 사이의 랜덤 정수 얻을 수 있다.
		Random 클래스는
			Random random = new Random();  // Random 임포트?선언? 해줌
			int rNum = random.nextInt(10); //10 까지  
			System.out.println(rNum);
	
	j07_반복<DoubliWhile2> 1교시, 50분 1~50분, 10분 쉬는 시간 1분~10분, 2교시 ... 4교시 ...		
	j07_반복.랜덤<Random2> 랜덤으로 생성되는 i 10개 중 최대값 구하기
	j07_반복.랜덤<Random3> a, b, c, max 비교
	j07_반복<For2> For문 중첩으로 구구단 만들기
	j07_반복<For3> For문으로 문자열 abcdefg 한글자씩 출력 [str.length]
	j07_반복<For4> 
	
	
20220721
	j08_메소드
		<Method1>
		만약 <ProtocolSubString> 을 data2 data3 만들려고 하면 
		똑같이 코드를 복사해서 코드를 전부 data2로 바꾸고 data3로 바꿔야한다. 그러나
		오늘 배울 Method를 이용하면 Method화 해서 사용이 가능하다.
		
		public static void printData(String data){
		while(true) {
		......
		}
		system.out.println("-------------")  -> data2, data3 늘어날때 마다 구분 선
		
		
		<Method2> 
			반환도 없고 매개변수도 없는 메소드 설명
			반환이 없고 매개변수가 있는 메소드 설명
			반환이 없고 매개변수가 두개인 메소드 설명
			반환이 있고 매개변수가 없는 메소드 설명
			test6 
				return과 break는
				둘다 반복을 멈추는 용으로 쓸 수 있지만 메소드 안에서 return; 해버리면
				반복도 종료하고 메소드도 탈출해버림
				break는 반복만 종료하고 메소드 아랫줄은 계속 실행!
				
			
			반환자료형
			리턴자료형
			
			반환값
			리턴값
			
			메소드명
			함수명
			
			파라미터
			매개변수
			
20220722
클래스
<Computer>
	클래스는 틀이다. 객체는 붕어빵
	인스턴스는 각각의 붕어빵들
	
	-힙영역 설명(생성, 소멸 + 가비지콜렉터)
		new  (Computer computer = new Computer())
			=> 생성이며 힙heap영역을 빌려오는 것 => 동적할당
			
Computer c1 = new Computer();   c1에 클래스 고유 주소를 대입한느 것이야~!~!
Computer c2 = new Computer(); 	
								c1.company = "삼성"
								
j09_클래스.생성자<ConstuctorEx>
	
		NoArgsConstructor, RequiredArgsConstructor, AllArgsConstructor	
				//Args -> Arguments 인수, 매개변수
				
			-ConstuctorEx constuctorEx2 = new ConstuctorEx("김준일"); => 매개변수 name에 대입
			-constructorEx2.name = "김준일"; => 전역 변수 this.name에 대입
			
j09_클래스.생성자<ConstuctorEx2> 
		기본생성자 말고 다른 생성자가
		하나라도 오버로딩 되면 기본생성자는 비활성화 된다. 
		그래서 같이 쓰고 싶으면 기본생성자를 명시해줘야한다.
j09_클래스.생성자<Car>, <CarMain>
		전체생성자 오버로딩해줌 -> 생성하면서 같이 값을 넣어줌
			Car car1 = new Car("현대자동차", "쏘나타", "화이트");
			car1.showInfo();
		이게 코드 끝
		전체생성자를 쓰는 이유 => 접근지정자!!!!!!!1
		
20220725
j10_배열
<Array1> 배열 기본형
	Scanner라는 클래스를 담을 수 있는 공간 5개 생성
		=> Scanner 객체를 5개 생성한게 아니다. 
<Array3> 배열 사용 해서 이름, 학년, 점수 순서 대로 객체 생성
<Array5> null개념

j10_배열.Arrays
<Arrays1> 
			Arrays 클래스 사용법
		 *  -배열을 관리해주는 객체
		 *  1. 배열의 내용을 검색 후 인덱스를 반환받는 방법
		 *  	-binarySearch(찾고자하는 값)
		 *  2. 배열을 복사할때 사용하는 메소드
		 *   	-copyOf(복사하고자하는 배열, 새로 생성할 배열의 크기)
		 *  3. 배열을 복사할 때 원하는 범위만 복사해주는 메소드
		 *  	-copyOfRange(복사하고자하는 배열, 시작인덱스, 마지막 인덱스)
		 *  4. 배열을 초기화하고 원하는 값으로 모두 채우는 메소드
		 *  	-fill(초기화하고자하는 배열, 채울 값)
		 *  5. 배열을 정렬하는 방법
		 *  	-sort(정렬하고자하는 배열)


j11_상속 <Animal>, <Factory> 
		상속받은 Human, Tiger  Samsung, Lg
		상속관계 속에서 메소드 매개변수의 이동 경로 파악
		Factories[] 배열해서 1공장 2공장 3공장 하는 법
<FactoryMain2>
	상속하면 부모 객체에 자식을 대입할 수있다.
	그런데 업캐스팅 되어있어서 자식에만 있는 메소드를 사용할 수 없다. 
	Main2에서 삼성과 엘지의 고유 메소드를 사용하고 싶으면 다시 형변환 해줘야한다. 
	
20220726
	<Q. 생성자랑 메소드가 다른 점>
	j10_클래스2 <Student>
	생성자는 new 할때만 쓰고 주소.찍고 할때 메소드를 씀
	public Car(){} 이게 기본 생성자 
	생성자는 무조건 클래스명이랑 똑같고 반환자료형이 없다!!!!
	기본생성자냐 전체생성자냐에 따라 매개변수가 있냐없냐만 다르다.
	<StudentMain>에 new 해서 생성하는 것은 모든 변수가 힙 메모리영역에 카피된다. 
	그런데 Student에 변수들을 전부 private 줬기 때문에 여기서 접근할 수없다. 그래서
	메소드들을 통해서 접근하겠다 -> 게터세터 필요
	
	<Student>에 Genarate to.string 해줌 -> 이게 머지
	
!!!!!!오늘 한 <Student>, <StudentService>, <StudentMain> 다시 영상 보면서 다시 만들기

<StudentService> 완전 망했슴 다시 하기


20220727
Q. 리터럴상수가 머였죠? 이미 정의되어진 상수죠 

<FactoryMain3>업캐스팅 다운캐스팅 다시 정리
<FactoryMain4>instanceOf 객체 비교
<FactoryMain5>instanceOf 써서 삼성1~50 공장 엘지 1~50 공장 가동, 스마트폰이랑 tv생산, 중지 


j12_다형성 - 인터페이스, 추상
추상  <Animal>, <Human>, <Computer>, <Laptop>, <Desktop>에서 추상클래스 추상메소드 특징 정리 
	추상
 	* 추상 메소드가 하나라도 포함되어 있는 클래스는 무조건 추상 클래스로 정의해야한다.
 	* 틀(클래스)를 만들기 위한 설계도(추상클래스)
 	* Main가서 생성할 때 추상 클래스는 생성할 수 없다. 
 	* 추상메소드란??: public abstract void move();  <<< 이런거
 	* 추상메소드는 무조건 클래스에서 구현해야한다. (오버라이드)
 	
 인터페이스와 추상클래스의 명확한 용도
 		*공장을 지으면 공장을 짓는 틀이 있다.    => 추상 클래스
 		*삼성공장을 지을때 공장에 들어가는 필수 요소를 가지고 짓고 + 삼성만 필요한 기능들
 		*엘지공장을 지을때 또 필수 요소 + 엘지만 필요한 기능들
 		*이게              추상 클래스  +  인터페이스
 	

20220728 
인터페이스 > <HDMI>,<Computer>,<Monitor>
	인터페이스 특징: (상속 x 구현이라고 한다)
		*모든메소드는 기본적으로 추상 메소드로 정의한다. 
		*생성을 할 수 없다.
		*일반 변수는 선언할 수 없다.
		*무조건 스태틱 상수를 사용한다. 
		*일반 메소드를 정의하기 위해서는 반환 자료형 앞에 default를 입력해야한다. 
		*인터페이스는 다중구현이 가능하다.   ==> HDMI랑 VGA 다중구현
		*      - 클래스는 다중상속 안됨
		*인터페이스랑 인터페이스 끼리는 상속
		*인터페이스랑 클래스는 implements 구현
		
	<HDMI>,<VGA>에서 동일한 메소드 명을 사용하면 동일한 동작만 하게되고
	그리고<Computer>에 우선 HDMI 자료형의 변수만 선언되어있다. 
	그래서 인터페이스 하나를 더 만들어서 HDMI와 VGA를 묶어주겠다 >>> <ConnectionTerminal>
	<VGA>, <HDMI>를 extends <ConnectionTerminal>해주고 connect 메소드를 지워준다. 
	
	Computer(ConnectionTerminal)
	
	
	인터페이스와 클래스의 차이점
	https://myjamong.tistory.com/150

	
	



		

		
							